package org.ovirt.engine.sdk.decorators;

import java.io.IOException;
import java.util.List;
import java.util.UUID;

import org.apache.http.Header;
import org.apache.http.client.ClientProtocolException;
import org.ovirt.engine.sdk.common.CollectionDecorator;
import org.ovirt.engine.sdk.exceptions.ServerException;
import org.ovirt.engine.sdk.utils.CollectionUtils;
import org.ovirt.engine.sdk.utils.HttpHeaderUtils;
import org.ovirt.engine.sdk.utils.UrlHelper;
import org.ovirt.engine.sdk.web.HttpProxyBroker;
import org.ovirt.engine.sdk.web.UrlParameterType;
import org.ovirt.engine.sdk.entities.Action;

/**
 * $publicCollectionName$ decorator.
 */
@SuppressWarnings("unused")
public class $decoratorSubCollectionName$ extends
        CollectionDecorator<org.ovirt.engine.sdk.entities.$publicEntityName$,
                            org.ovirt.engine.sdk.entities.$publicCollectionName$,
                            $decoratorEntityName$> {

    private $parentDecoratorName$ parent;

    /**
     * @param proxy HttpProxyBroker
     * @param parent $parentDecoratorName$
     */
    public $decoratorSubCollectionName$(HttpProxyBroker proxy, $parentDecoratorName$ parent) {
        super(proxy, "$urlCollectionName$");
        this.parent = parent;
    }

    /**
     * Lists $decoratorEntityName$ objects.
     * 
     * @return
     *     List of $decoratorEntityName$s
     *
     * @throws ClientProtocolException
     * @throws ServerException
     * @throws IOException
     */
    @Override
    public List<$decoratorEntityName$> list() throws ClientProtocolException,
            ServerException, IOException {
        String url = this.parent.getHref() + SLASH + getName();
        return list(url, org.ovirt.engine.sdk.entities.$publicCollectionName$.class, $decoratorEntityName$.class);
    }

    /**
     * Fetches $decoratorEntityName$ object by id.
     * 
     * @return 
     *     {@link $decoratorEntityName$ }
     *
     * @throws ClientProtocolException
     * @throws ServerException
     * @throws IOException
     */
    @Override
    public $decoratorEntityName$ get(UUID id) throws ClientProtocolException,
            ServerException, IOException {
        String url = this.parent.getHref() + SLASH + getName() + SLASH + id.toString();
        return getProxy().get(url, org.ovirt.engine.sdk.entities.$publicEntityName$.class, $decoratorEntityName$.class);
    }

$methods$
}
