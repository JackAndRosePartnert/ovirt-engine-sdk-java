package org.ovirt.engine.sdk.decorators;

import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.xml.bind.JAXBException;

import org.apache.http.Header;
import org.apache.http.client.ClientProtocolException;
import org.ovirt.engine.sdk.common.CollectionDecorator;
import org.ovirt.engine.sdk.exceptions.ServerException;
import org.ovirt.engine.sdk.utils.CollectionUtils;
import org.ovirt.engine.sdk.utils.HttpHeaderUtils;
import org.ovirt.engine.sdk.utils.UrlHelper;
import org.ovirt.engine.sdk.web.HttpProxyBroker;
import org.ovirt.engine.sdk.web.UrlParameterType;
import org.ovirt.engine.sdk.entities.Action;

public class $decoratorCollectionName$ extends
        CollectionDecorator<org.ovirt.engine.sdk.entities.$publicEntityName$, 
                            org.ovirt.engine.sdk.entities.$publicCollectionName$, 
                            $decoratorEntityName$> {

    public $decoratorCollectionName$(HttpProxyBroker proxy) {
        super(proxy, "$urlCollectionName$");
    }

    @Override
    public List<$decoratorEntityName$> list() throws ClientProtocolException, ServerException, IOException, JAXBException {
        String url = SLASH + getName();
        return list(url, org.ovirt.engine.sdk.entities.$publicCollectionName$.class, $decoratorEntityName$.class);
    }

    @Override
    public $decoratorEntityName$ get(UUID id) throws ClientProtocolException, ServerException, IOException, JAXBException {
        String url = SLASH + getName() + SLASH + id.toString();
        return getProxy().get(url, org.ovirt.engine.sdk.entities.$publicEntityName$.class, $decoratorEntityName$.class);
    }

$methods$
}
